@namespace Munchkin.Components

<div style="min-width:800px; max-width:1200px;">
    <div class="mat-layout-grid customcontainer">
        <div class="flex-container-horizontal" style="display:inline-flex">

            @if (DefausseType == typeof(CarteDonjon))
            {
                <MatCard Style="background-color:black" class="demo-mat-card">
                    <MatCardContent Style="position: relative; width: 100%;">
                        <img style="height:180px;" @onclick="@(() =>_nbCartesDonjonAffichees++)" src="/Cartes/Donjon/Dos.png">
                    </MatCardContent>
                </MatCard>
                @foreach (CarteDonjon carte in _cartesDonjonAffichees)
                {
                    <Draggable Data="@(_partie.PiocheCartesDonjon.IndexOf(carte))">
                        <DropTarget T="int" Drop="@((int index) => BougeCarteDonjon(index,_partie.PiocheCartesDonjon.IndexOf(carte)))">
                            <MatCard Style="background-color:black" class="demo-mat-card">
                                <MatCardContent Style="position: relative; width: 100%;">
                                    <img style="height:180px;" @onclick="@(() => AfficheCarteEnGrand(carte))" src="@carte.ImageURL">
                                    <div class="flex-container" style="transform: translateX(-50%); height:unset; left: 50%; bottom : 30%; position: absolute; background-color: transparent;">
                                        <button class="buttontest" @onclick="@(() => _partie.PrendCarteDePiocheDonjon(carte, Joueur))" style="background:#25793D">
                                            <img src="Icon/steal.svg" />
                                        </button>
                                    </div>
                                </MatCardContent>
                            </MatCard>
                        </DropTarget>
                    </Draggable>
                }
            }
            else
            {
                <MatCard Style="background-color:black" class="demo-mat-card">
                    <MatCardContent Style="position: relative; width: 100%;">
                        <img style="height:180px;" @onclick="@(() => _nbCartesTresorAffichees++)" src="/Cartes/Tresor/Dos.png">
                    </MatCardContent>
                </MatCard>

                @foreach (CarteTresor carte in _cartesTresorAffichees)
                {
                    <Draggable Data="@(_partie.PiocheCartesTresor.IndexOf(carte))">
                        <DropTarget T="int" Drop="@((int index) => BougeCarteTresor(index,_partie.PiocheCartesTresor.IndexOf(carte)))">
                            <MatCard Style="background-color:black" class="demo-mat-card">
                                <MatCardContent Style="position: relative; width: 100%;">
                                    <img style="height:180px;" @onclick="@(() => AfficheCarteEnGrand(carte))" src="@carte.ImageURL">
                                    <div class="flex-container" style="transform: translateX(-50%); height:unset; left: 50%; bottom : 30%; position: absolute; background-color: transparent;">
                                        <button class="buttontest" @onclick="@(() => PrendCarteDePiocheTresor(carte, Joueur))" style="background:#25793D">
                                            <img src="Icon/steal.svg" />
                                        </button>
                                    </div>
                                </MatCardContent>
                            </MatCard>
                        </DropTarget>
                    </Draggable>
                }
            }
        </div>
    </div>
</div>


@if (_carteAffichee != null)
{
    <MatDialog @bind-IsOpen="_afficheCarteEnGrand">
        <MatDialogContent Style="background:black">
            <MatCard Style="background-color:black" class="demo-mat-card">
                <MatCardContent Style="position: relative; width: 100%;">
                    <img style="height:500px ; width:350px" @onclick="@(() => _afficheCarteEnGrand = false)" src="@_carteAffichee.ImageURL">
                    <div class="flex-container-horizontal">
                        @if (_cartesTresorAffichees.Contains(_carteAffichee))
                        {
                            <button class="buttontestbig" @onclick="@(() => PrendCarteDePiocheTresor(_carteAffichee as CarteTresor, Joueur))" style="background:#25793D">
                                <img src="Icon/steal.svg" />
                            </button>
                        }
                        else
                        {
                            <button class="buttontestbig" @onclick="@(() => PrendCarteDePiocheDonjon(_carteAffichee as CarteDonjon, Joueur))" style="background:#25793D">
                                <img src="Icon/steal.svg" />
                            </button>
                        }
                    </div>
                </MatCardContent>
            </MatCard>
        </MatDialogContent>
    </MatDialog>
}


<style>

    .customcontainer {
        padding: 5px;
        margin: 10px;
    }
</style>
